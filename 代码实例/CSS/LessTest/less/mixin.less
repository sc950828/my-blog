.com {
  width: 500px;
  height: 200px;
}

.bg() {
  //不输出mixin，不会出现在css中
  background-color: red;
}

.bd {
  .bdw {
    cursor: pointer;
  }
}

.mpc (@margin:10px, @padding:10px, @color: red) {
  margin: @margin;
  padding: @padding;
  background-color: @color;
}

.th (@b: 5px, @so: solid, @co: blue) {
  border: @arguments;
}

.div1 {
  .com;
  .bg;
  .bd > .bdw; //混合中的混合使用>或者空格或者不空格都行
  .mpc(
    @margin: 20px,
    @color: black
  ); //当mixin有参数时我们可以设置默认参数，还可以传自定义个数参数。
  .th();
  .mixin(light, green);
}

.div2 {
  .com();
  .bg();
  .bd .bdw; //混合中的混合使用>或者空格或者不空格都行
  .mpc(
    @color: red,
    30px
  ); //当mixin有参数时我们可以设置默认参数，还可以传自定义个数参数。
  .th;
  .mixin(dark, green);
}

//模式匹配
.mixin (light, @color) {
  color: lighten(@color, 10%);
}

.mixin (dark, @color) {
  color: darken(@color, 10%);
}

.mixin (@_, @color) {
  //必须使用.mixin定义，根据传来的参数来匹配使用哪个mixin，使用@_匹配所有
  font-size: 20px;
}
